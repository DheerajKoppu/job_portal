@model JobPortal.Data.Entities.Job
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager

@{
    var user = await userManager.GetUserAsync(User);
    Layout = "_Layout";
}

<!-- Start banner Area -->
<section class="banner-area relative" id="home">
    <div class="overlay overlay-bg"></div>
    <div class="container">
        <div class="row d-flex align-items-center justify-content-center">
            <div class="about-content col-lg-12">
                <h1 class="text-white">
                    @Model.Name
                </h1>
                <p class="text-white link-nav"><a href="/">Home </a>  <span class="lnr lnr-arrow-right"></span>  <a href="#"> Job Details</a></p>
            </div>
        </div>
    </div>
</section>
<!-- End banner Area -->
<!-- Start post Area -->
<section class="post-area section-gap">
    <div class="container">
        <div class="row justify-content-center d-flex">
            <div class="col-lg-10 post-list">
                <div class="single-post d-flex flex-row">
                    <div class="thumb" style="align-items:center">
                        <a href="/job?slug=@Model.AppUser.Slug"><img style="border-radius:10px" width="200" height="100" src="https://localhost:7211/images/employers/@Model.AppUser.UrlAvatar" alt="EMPLOYER IMAGE"></a>
                        <ul class="tags" style="justify-content:center; display: grid; border-radius:10px">
                            <li style="border-radius:10px">
                                <strong><a href="/job?slug=@Model.Province.Slug" style="color: black"><span class="lnr lnr-map-marker"></span> @Model.Province.Name</a></strong>
                            </li>
                        </ul>
                        <hr />
                    </div>
                    <div class="details" style="margin-left:20px; width:600px;">
                        <div class="title d-flex flex-row justify-content-between">
                            <div class="titles">
                                <a href="/job/@Model.Slug"><h4>@Model.Name</h4></a>
                                <h5 style="color: gray; margin-bottom: 5px;"><span class="lnr lnr-hourglass"></span> @GetTimeAgo(Model.CreateDate)</h5>
                                <h5 style="margin-top: 10px; margin-bottom: 10px"><strong>From: <a href="/company/@Model.AppUser.Slug">@Model.AppUser.FullName</a></strong></h5>
                            </div>
                        </div>
                        <hr>
                        <p>@Html.Raw(Model.Introduce)</p>
                        <hr />
                        <div style="display:flex; justify-content: space-between;">
                            <div>
                                <h5><strong>Job Nature: @Model.Time.Name</strong></h5>
                                <h5 style="color: blue"><span class="lnr lnr-book"></span> <strong>@Model.Title.Name</strong></h5>
                                <h5 style="color: green"><strong>Salary Range: $@Model.MinSalary - $@Model.MaxSalary </strong></h5>
                            </div>
                            <!-- Apply Now Button -->
                            <div style="text-align:right; margin-top: 40px">
                                <ul class="btns">
                                    @if (signInManager.IsSignedIn(User))
                                    {
                                        if (!User.IsInRole("User"))
                                        {
                                            <li style="border-radius:10px"><a href="#" onclick="accessDenied()">Apply now</a></li>
                                        }
                                        else if (ViewBag.HasSubmittedCV)
                                        {
                                            <li style="border-radius:10px"><a href="#" onclick="waiting()">Apply now</a></li>
                                        }
                                        else
                                        {
                                            <li style="border-radius:10px"><a href="/apply/@Model.Slug/@user.Id">Apply now</a></li>
                                        }
                                    }
                                    else
                                    {
                                        <li style="border-radius:10px"><a target="_blank" href="/login">Login to Apply</a></li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="single-post job-details">
                    <h4 class="single-title">Whom we are looking for</h4>
                    <p>@Html.Raw(Model.Description)</p>
                </div>
                <div class="single-post job-experience">
                    <ul>
                        <li>
                            <span>@Html.Raw(Model.ObjectTarget)</span>
                        </li>
                    </ul>
                </div>
                <div class="single-post job-experience">
                    <ul>
                        <li>
                            <span>@Html.Raw(Model.Experience)</span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Sidebar -->
        </div>
    </div>
</section>
<!-- End post Area -->
<!-- Start callto-action Area -->
<section class="callto-action-area section-gap">
    <div class="container">
        <div class="row d-flex justify-content-center">
            <div class="menu-content col-lg-9">
            </div>
        </div>
    </div>
</section>
<!-- End callto-action Area -->

<script>
    function accessDenied() {
        Swal.fire({
            title: 'Sorry !',
            text: 'You must be a user.',
            icon: 'warning',
            confirmButtonText: 'OK'
        });
    }

    function waiting() {
        Swal.fire({
            title: 'You already submitted your application!',
            text: 'Please wait for an update from the company.',
            icon: 'info',
            confirmButtonText: 'OK'
        });
    }
</script>

@functions {
    public string GetTimeAgo(DateTime? createDate)
    {
        DateTime actualCreateDate = createDate.Value;
        TimeSpan timeAgo = DateTime.Now - actualCreateDate;

        if (timeAgo.TotalMinutes < 60)
        {
            return $"Posted {Math.Max(1, (int)timeAgo.TotalMinutes)} minute{(timeAgo.TotalMinutes >= 2 ? "s" : "")} ago";
        }
        else if (timeAgo.TotalHours < 24)
        {
            return $"Posted {Math.Max(1, (int)timeAgo.TotalHours)} hour{(timeAgo.TotalHours >= 2 ? "s" : "")} ago";
        }
        else
        {
            return $"Posted {Math.Max(1, (int)timeAgo.TotalDays)} day{(timeAgo.TotalDays >= 2 ? "s" : "")} ago";
        }
    }
}
